/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isSymmetric(TreeNode root) {
        
        if(root.left!=null && root.right!=null)
        {
           if(check(root.left ,root.right))
               return true;
        else return false;
        }
        if(root.left == null && root.right!=null || (root.left!=null && root.right==null))
            return false;
        else return true;
        
    }
  public boolean check(TreeNode node1 ,TreeNode node2)
    {
        if(node1 ==null && node2 ==null)
            return true;
        if(node1 == null && node2!=null || (node1!=null && node2==null))
            return false;
        
        if(node1.val == node2.val)
        {
            if(check(node1.left,node2.right) && check(node1.right,node2.left))
                return true;
            else return false;
        }
        else return false;
    }
}