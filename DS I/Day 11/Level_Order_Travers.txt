/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    List<List<Integer>> list =new ArrayList<>();
    public List<List<Integer>> levelOrder(TreeNode root) {
        
        if(root==null)
            return list;
        Queue<TreeNode> que =new LinkedList<>();
        que.add(root);
        
        while(true)
        {
            if(que.size()==0)
                break;
            int co=que.size();
            List<Integer>list1 =new ArrayList<>();
            
            while(co>0)
            {
                TreeNode tmp=que.peek();
                list1.add(que.remove().val);
                if(tmp.left!=null)
                    que.add(tmp.left);
                if(tmp.right!=null)
                    que.add(tmp.right);
                co--;
            }
            list.add(list1);
        }
        return list;
    }
}