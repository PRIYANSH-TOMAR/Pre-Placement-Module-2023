/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        
        ListNode ele1=headA;
        ListNode ele2=headB;
        int len1=0,len2=0;
        
        while(ele1.next!=null||ele2.next!=null)
        {
            if(ele1.next!=null)
            {
            ele1=ele1.next;
            len1++;
            }
            
            if(ele2.next!=null)
            {
                ele2=ele2.next;
                len2++;
            }
        }
        
        if(ele1!=ele2)
            return null;
        else
        {
            ele1=headA;ele2=headB;
            int len=Math.abs(len1-len2);
            
            if(len1>len2)
            {
                while(len-->0)
                {
                    ele1=ele1.next;
                }
            }
            
            else if(len2>len1)
            {
                while(len-->0)
                    ele2=ele2.next;
            }
            
            while(true)
            {
                if(ele1==ele2)
                    return ele1;
                else
                {
                    ele1=ele1.next;
                    ele2=ele2.next;
                }
            }
        }
        
        
    }
}